@page "/datainput"

@using DiagnosticsSummary.Client.Models.Input
@using static DiagnosticsSummary.Client.Contexts.DataInputContext

<div class="row">
    <label>@MainLabel</label>
    @foreach (var field in Fields)
    {
        <label>@field.Label: </label>
        @if (field.Method == HtmlMethod.Input)
        {
            <input type=@field.InputType @bind-value="@field.Value" />
        }
        else
        {
            <select class="custom-select"
            @bind="@field.Value">
                <option disabled selected>(Выберите)</option>
                @foreach (var obj in field.SelectObjects)
                {
                    <option value=@obj.Value> @obj.Name</option>
                }
            </select>
        }
    }
</div>
<button @onclick="OnButtonOkClick">Выполнить</button>
<button @onclick="OnButtonClearClick">Сбросить</button>
<button @onclick="OnButtonBackClick">Назад</button>

@code {
    string MainLabel = "Введите данные";
    [Inject]
    NavigationManager navigationManager { get; set; }

    public void OnButtonOkClick()
    {
        foreach (var field in Fields)
        {
            if (!(AreNullsAvailable && (field.Value is null)) &&
            !field.IsValidValue(field.Value))
            {
                MainLabel = "Неверно введены данные в поле " + field.Label;
                return;
            }
        }
        navigationManager.NavigateTo(OkNavigateTo);
    }

    public void OnButtonClearClick()
    {
        foreach (var field in Fields)
        {
            field.Value = null;
        }
    }

    public void OnButtonBackClick()
    {
        navigationManager.NavigateTo(BackNavigateTo);
    }
}
